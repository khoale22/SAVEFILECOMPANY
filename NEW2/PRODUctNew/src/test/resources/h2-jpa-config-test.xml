<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">
    <context:property-placeholder location="classpath:application.properties" ignore-unresolvable="true"/>

    <jdbc:embedded-database id="dataSourceH2" type="H2"/>

    <jdbc:initialize-database data-source="dataSourceH2">
        <jdbc:script location="classpath:WIC_MASTER_DLL.sql"/>
        <jdbc:script location="classpath:EMD_WIC_CAT.sql"/>
        <jdbc:script location="classpath:EMD_WIC_SUB_CAT.sql"/>
        <jdbc:script location="classpath:EMD_PROD_SCN_CODES.sql"/>
        <jdbc:script location="classpath:EMD_PROD_SCN_CD_WIC.sql"/>
        <jdbc:script location="classpath:BAT_ENVMT_CFG.sql"/>
    </jdbc:initialize-database>

    <bean id="emfOracle" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" primary="true">
        <property name="dataSource" ref="dataSourceH2"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan">
            <array>
                <value>com.heb.batch.wic.entity</value>
            </array>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="spring.jpa.properties.hibernate.hbm2ddl.import_files">
                    ${spring.jpa.properties.hibernate.hbm2ddl.import_files}
                </prop>
                <prop key="spring.datasource.data">${spring.datasource.data}</prop>
            </props>
        </property>
    </bean>

    <bean id="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emfOracle"/>
    </bean>

    <tx:annotation-driven transaction-manager="jpaTransactionManager"/>

    <jpa:repositories base-package="com.heb.batch.wic.repository"
                      entity-manager-factory-ref="emfOracle"
                      transaction-manager-ref="jpaTransactionManager"/>

<!--	<jdbc:embedded-database id="jobDataSource" type="H2" />

	<jdbc:initialize-database data-source="jobDataSource">
		<jdbc:script location="classpath:BAT_ENVMT_CFG.sql" />
	</jdbc:initialize-database>-->

    <bean id="jobDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        <property name="driverClassName" value="org.h2.Driver" />
        <property name="url" value="jdbc:h2:mem:dataSourceH2" />
        <property name="username" value="sa" />
        <property name="password" value="sa" />
    </bean>

	<!--<batch:job-repository id="jobRepository" data-source="jobDataSource" transaction-manager="jobTransactionManager" />

	<bean id="jobTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="jobDataSource" />
	</bean>-->
</beans>